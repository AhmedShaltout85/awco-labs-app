http://localhost:8080/awco-labs-app/api/v1/avg/filter/lab-code/test-date/11/2024-04-01

-- add @Transactional before @Service
--     @Procedure(name = "Lab_Parameters") //return value equal to Double not (Entity or DTO)
       List<Float> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

-- must determine the return type before create methods in repos
-- spring 3.2.0 with jdk 17(solve errors occur with stored procedure mssql)

    //1-this way is run good with stored procedure
//    @Query(value = "EXEC Lab_Parameters ?1, ?2", nativeQuery = true)
//    List<Float> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

   //1-this way is run good with stored procedure(named args)
//    @Query(value = "EXEC Lab_Parameters :Lab_Code, :Test_Date", nativeQuery = true) // used with any return type
//    List<Float> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

    //2-this way is run good with stored procedur
//    @Procedure(name = "Lab_Parameters") // used if return Entity or DTO
//    List<Float> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

    //3-this way is run good with stored procedure
    @Procedure(name = "Lab_Parameters") //return value equal to Double not (Entity or DTO)
    List<Float> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

    must add named-query in entity like this:

    @NamedStoredProcedureQuery(
            name = "Lab_Parameters",
            procedureName = "Lab_Parameters",
            parameters = {
                    @StoredProcedureParameter(mode = ParameterMode.IN, type = Integer.class, name = "Lab_Code"),
                    @StoredProcedureParameter(mode = ParameterMode.IN, type = String.class, name = "Test_Date"),
            }
    )

    --jpql mean: used entity schema name and args in native query
@Transactional
@Modify
are used with native query that is used to change or update in db records

   //1-this way is run good with stored procedure(named args)
//    @Query(value = "EXEC Lab_Parameters :Lab_Code, :Test_Date", nativeQuery = true) // used with any return type
//    List<Object[]> Lab_Parameters(@Param("Lab_Code") int labCode, @Param("Test_Date") String testDate);

--IMPORTANT: List<Object[]> mean that : return part of entity args not all args

--to add docs :

openapi docs

<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui -->
  <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
  </dependency>

http://localhost:8080/awco-labs-app/swagger-ui/index.html
http://localhost:8080/awco-labs-app/v3/api-docs?continue

--difference between int and Integer :
int default value= 0
Integer default value = null
so if Id in @Id must be Integer because if have no value it not found value with 0

-- if database create before create Restful api and not need to change args values used:
spring.jpa.hibernate.ddl-auto=none

-- if you want to use more than one dbs :(config file)
create 2 application.properties-mysql
         application.properties-mssql
